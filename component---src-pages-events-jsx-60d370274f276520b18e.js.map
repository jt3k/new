{"version":3,"sources":["webpack:///./src/pages/events.jsx","webpack:///./src/components/Layout/Layout.jsx","webpack:///./src/components/Layout/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header/Header.jsx","webpack:///./src/components/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","currentDate","Date","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","render","_ref","events","allIcal","edges","reduce","event","node","dtstamp","start","end","concat","map","summary","description","location","toLocaleString","data","_public_static_d_2157506727_json__WEBPACK_IMPORTED_MODULE_2__","Layout_Layout_Layout","children","react_default","gatsby_browser_entry","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","keywords","lang","components","siteTitle","_2905412792","propTypes","prop_types_default","isRequired","components_Layout_Layout","__webpack_require__","d","m","module","exports","default","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","props","Consumer","staticQueryData","Error","object","string","func","Header_Header_Header","className","components_Header_Header","Layout","ProdPageRenderer","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","Object","assign","key","json","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape"],"mappings":"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","file":"component---src-pages-events-jsx-60d370274f276520b18e.js","sourcesContent":["import React from 'react';\nimport {\n    StaticQuery,\n    graphql\n} from 'gatsby';\nimport {Layout} from \"../components/Layout\";\n\n\nexport default () => {\n    const currentDate = new Date();\n\n    return (\n        <Layout>\n            <StaticQuery\n                query={graphql`\n                query EventsQuery {\n                    allIcal(filter: {sourceInstanceName: {eq: \"events\"}} sort: {order: ASC fields: [start]}) {\n                        edges {\n                            node {\n                                start\n                                end\n                                summary\n                                description\n                                location\n                            }\n                        }\n                    }\n                }\n            `}\n                render={({allIcal: {edges: events}}) =>\n                    <ul>\n                        {events\n                            .reduce((events, event) => {\n                                event = event.node;\n                                event.dtstamp = new Date(event.dtstamp);\n                                event.start = new Date(event.start);\n                                event.end = new Date(event.end);\n\n                                if (event.end < currentDate) {\n                                    return events\n                                }\n\n                                return [\n                                    ...events,\n                                    event\n                                ]\n                            }, [])\n                            .map(event => (\n                                <li>\n                                    <b>{event.summary}</b><br/>\n                                    <p>\n                                        Описание: {event.description}<br/>\n                                        Место: {event.location}<br/>\n                                        Начало: {event.start.toLocaleString()}<br/>\n                                        Конец: {event.end.toLocaleString()}<br/>\n                                    </p>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                }\n            />\n        </Layout>\n    );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport {\n    StaticQuery,\n    graphql\n} from 'gatsby';\n\nimport {Header} from '../../components';\nimport './Layout.css';\n\nconst Layout = ({children}) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                  siteMetadata {\n                        title,\n                        description,\n                        keywords\n                    }\n                }\n          }\n        `}\n        render={data => (\n            <>\n                <Helmet\n                    title={data.site.siteMetadata.title}\n                    meta={[\n                        {\n                            name: 'description',\n                            content: data.site.siteMetadata.description\n                        },\n                        {\n                            name: 'keywords',\n                            content: data.site.siteMetadata.keywords\n                        }\n                    ]}\n                >\n                    <html lang=\"en\"/>\n                </Helmet>\n                <Header siteTitle={data.site.siteMetadata.title}/>\n                <main>\n                    {children}\n                </main>\n            </>\n        )}\n    />\n);\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","export {default as Layout} from './Layout';\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Header.css';\n\nconst Header = ({siteTitle}) => (\n    <h1 className=\"header\">\n        {siteTitle}\n    </h1>\n);\n\nHeader.propTypes = {\n    siteTitle: PropTypes.string.isRequired\n};\n\nexport default Header;\n","export {Header} from './Header';\nexport {Layout} from './Layout';\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    key: location.pathname,\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}