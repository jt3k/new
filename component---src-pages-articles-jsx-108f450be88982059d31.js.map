{"version":3,"sources":["webpack:///./src/pages/articles.jsx","webpack:///./src/components/Layout/Layout.jsx","webpack:///./src/components/Layout/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header/Header.jsx","webpack:///./src/components/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["ArticlesTemplate","_ref","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_4__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","to","__webpack_exports__","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","_public_static_d_1438136063_json__WEBPACK_IMPORTED_MODULE_0__","Layout_Layout_Layout","children","react_default","gatsby_browser_entry","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","description","keywords","lang","components","siteTitle","_2905412792","propTypes","prop_types_default","node","isRequired","components_Layout_Layout","__webpack_require__","d","m","module","exports","default","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","props","Consumer","staticQueryData","Error","object","string","func","Header_Header_Header","className","components_Header_Header","Layout","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","Object","assign","key","json","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape"],"mappings":"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","file":"component---src-pages-articles-jsx-108f450be88982059d31.js","sourcesContent":["import React from 'react';\nimport Link from 'gatsby-link';\nimport {\n    StaticQuery,\n    graphql\n} from 'gatsby';\n\nimport {\n    Layout\n} from '../components';\n\nconst ArticlesTemplate = ({data}) => {\n\n    console.log('data: ', data); // eslint-disable-line\n\n    return (\n        <Layout>\n            <h2>Статьи сайта</h2>\n            <p>\n                <Link to=\"/\">Вернуться на главную</Link>\n            </p>\n        </Layout>\n    );\n};\n\nconst Articles = () => {\n\n    return (\n        <StaticQuery\n            query={graphql`\n                query ArticlesQuery {\n                    allMarkdownRemark {\n                        edges {\n                            node {\n                                html\n                                headings {\n                                    depth\n                                    value\n                                }\n                                frontmatter {\n                                    title\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n            render={ArticlesTemplate}\n        >\n\n        </StaticQuery>\n    );\n};\n\nexport default Articles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport {\n    StaticQuery,\n    graphql\n} from 'gatsby';\n\nimport {Header} from '../../components';\nimport './Layout.css';\n\nconst Layout = ({children}) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                  siteMetadata {\n                        title,\n                        description,\n                        keywords\n                    }\n                }\n          }\n        `}\n        render={data => (\n            <>\n                <Helmet\n                    title={data.site.siteMetadata.title}\n                    meta={[\n                        {\n                            name: 'description',\n                            content: data.site.siteMetadata.description\n                        },\n                        {\n                            name: 'keywords',\n                            content: data.site.siteMetadata.keywords\n                        }\n                    ]}\n                >\n                    <html lang=\"en\"/>\n                </Helmet>\n                <Header siteTitle={data.site.siteMetadata.title}/>\n                <main>\n                    {children}\n                </main>\n            </>\n        )}\n    />\n);\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","export {default as Layout} from './Layout';\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Header.css';\n\nconst Header = ({siteTitle}) => (\n    <h1 className=\"header\">\n        {siteTitle}\n    </h1>\n);\n\nHeader.propTypes = {\n    siteTitle: PropTypes.string.isRequired\n};\n\nexport default Header;\n","export {Header} from './Header';\nexport {Layout} from './Layout';\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    key: location.pathname,\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}