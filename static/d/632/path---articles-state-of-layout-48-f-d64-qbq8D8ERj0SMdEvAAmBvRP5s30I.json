{"data":{"site":{"siteMetadata":{"title":"Веб-стандарты"}},"markdownRemark":{"id":"4e51313d-1773-591d-973d-6ea73627eecc","excerpt":"Какой расклад? Вячеслав Олиянчук  30 августа 2010 Эта статья посвящается тем, кто задает правильные вопросы. В этой статье я постарался…","html":"<h1>Какой расклад?</h1>\n<p><a href=\"http://miripiruni.org\">Вячеслав Олиянчук</a> 30 августа 2010</p>\n<p>Эта статья посвящается тем, кто задает правильные вопросы.</p>\n<p>В этой статье я постарался рассмотреть все самые распространенные вопросы, сомнения и критику по поводу необходимости создания и внедрения новых механизмов раскладки. Cтатья дополняет и продолжает содержание моего выступления «<a href=\"/events/wsd-spb-2010/#layout\">CSS3: будущее механизмов раскладки</a>». Если вы его не смотрели, то рекомендую ознакомиться.</p>\n<p>Итак, у нас есть три черновика модулей CSS3: <a href=\"http://www.w3.org/TR/css3-grid/\">Grid Positioning Module</a>, <a href=\"http://www.w3.org/TR/css3-flexbox/\">Flexible Box Layout</a>, <a href=\"http://www.w3.org/TR/css3-layout/\">Template Layout</a>. Каждый ценен своей уникальной идеей. Эти идеи <em>специально спроектированы</em> для решения определенного рода задач по раскладкам. Задач, которые в настоящее время решают <em>не предназначенными</em> для этого методами. Отсюда сложности в разработке и поддержке, ограничения и даже побочные эффекты этих методов.</p>\n<h2>Долететь до Луны, используя катапульту</h2>\n<p>Эра CSS-вёрстки, как и эра бурного развития клиентских технологий, длится не так уж и долго. С большой натяжкой — каких-то полтора десятка лет. Сначала все сайты не имели никаких раскладок. Даже графика была редкостью. Затем в веб стали приходить бизнес, индустрия развлечений, СМИ… Требования к представлению информации несоизмеримо выросли.</p>\n<p>Сегодня мы находимся в ситуации, когда CSS не отвечает требованиям гибких, технологичных и надежных раскладок. Именно поэтому создаются новые модули, посвященные созданию сеток, шаблонов, гибких блоков. Параллельно с этим разрабатываются такие модули, как <a href=\"http://www.w3.org/TR/css3-mediaqueries/\">Media Queries</a>, <a href=\"http://www.w3.org/TR/css3-page/\">Paged Media</a> и другие. Всё это способствует расширению возможностей представления информации в разных условиях и на разных устройствах.</p>\n<h2>То, что нельзя прочитать в спецификации</h2>\n<p>Теперь давайте рассмотрим несколько вопросов, возникающих при размышлении о раскладках.</p>\n<h3>Чем не устраивает <code>float</code>?</h3>\n<p>Свойство <code>float</code> способно наделять блоки плавающим поведением. Можно поместить блок слева или справа в контексте других блоков. Недостаточная гибкость <code>float</code> заключается в невозможности поместить блок в контексте других блоков, не прижимая его к краям этого контекста. Такого поведения <a href=\"http://www.w3.org/TR/css3-grid/#grid-units\">можно добиться</a>, используя модуль Grid.</p>\n<h3>Почему бы просто не реализовать <code>display:table</code> во всех браузерах и не забыть про эти многочисленные модули?</h3>\n<p>Я полностью поддерживаю стремление реализовать <code>display:table</code> во всех браузерах. Но это вовсе не означает, что <code>display:table</code> сможет дать нам гибкий и перспективный механизм создания раскладок. Как можно поменять местами две колонки, не меняя HTML-разметки? Или как, например, возможно поместить блок, который будет одновременно находиться в области этих двух колонок, и при этом их содержимое будет его обтекать? Свойство <code>display:table</code> (как и свойства <code>position</code> и <code>float</code>) проектировалось совсем не для создания раскладок.</p>\n<h3>Кто круче: Grid, Flexbox, Template?</h3>\n<p>Очень хороший вопрос: какой из этих трёх модулей лучше, и кто в итоге должен выиграть? На самом деле, сила этих модулей именно в комбинировании возможностей и в совместном их использовании. Эти модули не стоит воспринимать как конкурентов друг другу. Наоборот, в основе каждого лежит идея позволяющая реализовать уникальные вещи. Так, Grid предназначен для создания сетки и привязки к этой сетке; Flexbox реализует особый механизм поведения блоков; Template создает набор слотов и позволяет, управляя ими, строить раскладки.</p>\n<h3>Что за разговор, это же всё очень сырое и потому неинтересное!</h3>\n<p>Это действительно интересный момент. Сырое, согласен. Но почему никого не смущают и, напротив, очень даже интересуют сырые реализации <code>box-shadow</code> и <code>border-radius</code>, а также остальных модных оформительских CSS-свойств. Лично меня очень расстраивает эта возня около вещей, продиктованных модой. Сегодня уголки квадратные, завтра круглые… а послезавтра?</p>\n<p>Если серьезно, то на тенюшках, красивых градиентах, кнопках и декоративных вещах нельзя построить большой и серьезный сайт. Основа сайта — раскладка. Именно поэтому мне непонятно, почему жадная до зрелищ толпа разработчиков и дизайнеров давит на производителей браузеров и повышает приоритет и престиж того же <code>border-radius</code>, а потом с салютом и ночными гуляниями отмечает выпуск новой бета-версии браузера с поддержкой этого свойства.</p>\n<p>Я считаю, что внедрение, например, модуля Grid или Template может принести гораздо больше пользы, сократить тысячи часов однообразного труда и сэкономить бесчисленное количество денег при разработке раскладок для проектов по всему миру. А это очевидное развитие всей отрасли.</p>\n<h3>Mozilla сказала своё слово, разработав и внедрив Flexbox. Чей ход теперь?</h3>\n<p>Справедливости ради нужно сказать, что Flexbox работает не только в Firefox, но и в Safari и в Chrome. А это уже три браузера из большой пятерки. Мой прогноз: в ближайший год IE или Opera введут поддержку этого модуля. Причем я больше склоняюсь в сторону IE. Предпосылки к этому есть — активное обсуждение в рассылке <a href=\"http://lists.w3.org/Archives/Public/www-style/\">www-style</a>, где Рабочая группа CSS (<a href=\"http://www.w3.org/Style/CSS/members.php3\">CSS Working Group</a>) и все желающие обсуждают технические вопросы.</p>\n<h3>Давайте сделаем тег <code>&#x3C;layout></code>?</h3>\n<p>Это совсем провальное намерение. Идеология открытого веба, к которому мы все так стремимся, гласит: отделяй данные от их представления. Таким образом, внедрять экстра-разметку или какие-либо заведомо стилизованные теги — тупиковый путь.</p>\n<p>И главное: <code>&#x3C;layout></code> — это путь в каменный век табличной вёрстки. Подобные методы не оправдали себя в создании гибких раскладок. Вот простой пример: нужно изменять внешний вид страницы и саму раскладку в зависимости от размеров окна браузера. С HTML-разметкой это невозможно. А сейчас для этого существует CSS-модуль <a href=\"http://www.w3.org/TR/css3-mediaqueries/\">Media Queries</a>.</p>\n<h3>Какие преимущества мы получаем?</h3>\n<p>Создавать раскладку при помощи Grid, Flexbox и Template гораздо проще. Следовательно, не нужно оплачивать труд CSS-гуру или самому быть им. Это совсем не означает, что высококвалифицированному специалисту будет нечего делать. Наоборот, он найдет себе применение в решении более интересных задач вёрстки.</p>\n<p>Создавать раскладки можно гораздо быстрее, а значит — можно сократить сроки вёрстки.</p>\n<p>Раскладка на Grid, Flexbox и Template более функциональная и гибкая. Таким образом, внесение изменений будет обходиться дешевле, проще и быстрее.</p>\n<p>Так как раскладкой в CSS будут заведовать определенные специально предназначенные для этого свойства, легко можно будет наладить автоматическую генерацию раскладок. Возможно, именно тогда CSS-фреймворки обретут второе дыхание.</p>\n<h3>Главный вопрос</h3>\n<p>Сейчас не нужно выдумывать ничего нового. Нужно сосредоточить свое внимание на этих спецификациях. Осознать, что уже проделана огромная работа по придумыванию и обсуждению этих идей. Также важно, что именно Рабочая группа CSS занимается этими вопросами. Эти идеи родились в их умах. В умах людей, которые сегодня имеют непосредственное отношение к разработке браузеров. На этом уровне вопросы не решаются мгновенно, но на динамику и приоритет новых механизмов раскладок можно повлиять. К профессиональному сообществу веб-разработчиков производители браузеров, их специалисты по связям с разработчиками, технические специалисты и руководство прислушиваются всегда. Так может, спросим все вместе: «Когда же?»</p>","frontmatter":{"title":"Какой расклад?","date":"30 августа 2010"}}},"pageContext":{"slug":"/articles/state-of-layout/"}}